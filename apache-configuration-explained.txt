Here I use Lynda.com and Wikipedia to explain the apache module and mod-wsgi as they pertain to apache configuration.

WHAT IS AN APACHE MODULE?

Httpd is modular, meaning it consist of a system of plugins that add specific functionality. 
Apache comes with a default set of modules that are included upon compilation. 
Static modules are compiled into the httpd and are loaded every time Apache is started. 
Shared modules on the other hand, can be added without recompiling the core configuration. 
This is typically more flexible. 
Shared modules can be dynamically loaded, meaning the modules can be turned on or off.
Overall, execution of shared modules is a little bit slower than static modules, but it's way more flexible. 
From a configuration point of view each module has its own directives that can be used to configure the additional functionality. 
If the server configuration includes module specific directives and the module isn't enable or available, then the server will not be able to start due to a syntax error. 
To prevent that situation, it's possible to wrap module specific configuration in an IfModule directive, with an argument containing the module name.
For example, IfModule mod_ssl, will only run if the mod_ssl module was enabled.

WHAT DOES MOD-WSGI DO?

mod_wsgi is an Apache HTTP Server module by Graham Dumpleton that provides a WSGI compliant interface for hosting Python based web applications under Apache. 
The Web Server Gateway Interface (WSGI) is a specification for simple and universal interface between web servers and web applications or frameworks for the Python programming language.
It has been adopted as a standard for Python web application development. 
Note that mod_wsgi is an alternative to mod_python, CGI, and FastCGI solutions for Python-web integration. 
